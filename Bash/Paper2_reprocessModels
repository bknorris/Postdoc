#!/bin/bash
# cd "${0%/*}" || exit                                
#
# Purpose: This script adjusts model settings in OpenFOAM files based on a csv of values
# then re-processes the files using the OpenFOAM postProcessing utility
# Author:  Benjamin K. Norris (U.S. Geological Survey)
#---------------------------------------------------------------------------------------

# Initialize current directory; OpenFOAM applications
curdir=$(pwd)
. ${WM_PROJECT_DIR:?}/bin/tools/RunFunctions

# Define source and destination directories
# NOTE: destdir must be the root directory for the models!
csvfile="/mnt/c/Users/bknorris/Documents/Models/Paper2_OptimizingRestoration/ModelRuns/adjustModelSampling_TEST.csv"
sourcedir="/mnt/c/Users/bknorris/Documents/Models/Paper2_OptimizingRestoration/ModelRuns/Scenarios/"
destdir="/mnt/c/Users/bknorris/Documents/Models/Paper2_OptimizingRestoration/"

# Check to see if CSV is windows formatted or unix formatted
if [[ $csvfile == *$'\n' ]]; then
	echo "Converting CSV to UNIX format..."
	dos2unix $csvfile
fi 

# Check to see if a ZipFile folder exists in the source
if ! test -d "${sourcedir}Reprocessed"; then #check to see if the filename.zip exists in $dest
	echo "No Reprocessed folder exists in the source directory... creating folder!"
	mkdir "${sourcedir}Reprocessed"
else
	echo "Reprocessed folder already exists in the source directory!"
fi

## Loop through the model directory and only process folders listed in the CSV
for files in ${sourcedir}*.zip ; do #"$sourcedir/*.zip"  $sourcedir/*/
	file=$(basename "$files")
	file=${file%%.*} # Remove file extension
	# Read the CSV and match the line with the model name 
		# CSV line headers:
		# col1 = orgScenarioNumber
		# col2 = waterDepth
		# col3 = waveHeight
		# col4 = wavePeriod
		# col5 = rampTime
		# col6 = runTime
		# col7 = purgeWrite
		# col8 = waveTheory

	while IFS=, read -r col1 col2 col3 col4 col5 col6 col7 col8;do
		if [[ "$file" == *"_$col1" ]]; then
			echo "Processing $file"

			# Unzip model file from sourcedir to destdir
			7z x "$sourcedir$file.zip" "-o${destdir}ModelRuns/Scenarios/"
			cd $destdir"ModelRuns/Scenarios/$file/Model/"

 			# Run OF postProcessing routine:
 			# Remove postProcessing, reconstruct and reprocess
 			echo "Removing old postProcessing folders..."
 			rm -r postProcessing/freeSurface
 			rm -r postProcessing/bathySample

 			# Copy the correct sampling STL to the model folder
 			echo "Copying sampling files to model folder..."
 			if [[ $col4 == '5' ]]; then
 				cp -r ../../../../3D_Models/Domains_sampleVolume_Length_4_V3.stl constant/triSurface/bathymetry_sample.stl
 			else
 				cp -r ../../../../3D_Models/Domains_sampleVolume_Length_8_V3.stl constant/triSurface/bathymetry_sample.stl
 			fi

 			# Copy sampling utilities to model folder
 			cp -r ../Scenarios/freeSurface ./system
 			cp -r ../Scenarios/bathySample ./system

 			# Replace values in the folder with values from the CSV:
 			echo "Updating model control file with new values..."

 			# Edit controlDict
 			fileToEdit=system/controlDict
 			sed -i "s/endTime         \(.*\);/endTime         $col6;/g" $fileToEdit
 			sed -i "s/purgeWrite      \(.*\);/purgeWrite      $col7;/g" $fileToEdit

 			# Re-run postProcessing utility

 			## Adjust to mpi "runParallel" on BKN-FIELD or DISCO2? ##
 			echo "Running postProcessing utilities..."
 			runApplication reconstructPar
 			rm log.postProcess
 			runApplication postProcess -func freeSurface
 			rm log.postProcess
 			runApplication postProcess -func bathySample

 			# Remove reconstructed folders to save disk space
 			find . -name '[1-9][0-9].[0-9]*' -type d -exec rm -rv '{}' \; #exclude 0/ and 0.org/ folders

 			# Zip model file from destdir to sourcedir
 			echo "Creating new ZIP file..."
 			cd ../../
 			7z a "${sourcedir}Reprocessed/$file.zip" -o"$file" 

 			# Remove file from destdir
 			echo "Removing folder..."
 			rm -r "${destdir}ModelRuns/Scenarios/$file"

 			printf '\n\n'
 			cd $curdir
		fi
	done < <(tail -n +2 $csvfile)
done